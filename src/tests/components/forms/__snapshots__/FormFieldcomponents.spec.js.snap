// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` LoginModal component rendering Should render properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormField
    errors="Invalid Input"
    label="username"
    name="email"
    onChange={[Function]}
    placeholder="enter password"
    type="email"
    value="email"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <label
          htmlFor="email"
        >
          username
          <input
            id="email"
            name="email"
            onChange={[Function]}
            placeholder="enter password"
            type="email"
            value="email"
          />
        </label>,
        <Label
          color="red"
          pointing={true}
        >
          Invalid Input
        </Label>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "username",
            <input
              id="email"
              name="email"
              onChange={[Function]}
              placeholder="enter password"
              type="email"
              value="email"
            />,
          ],
          "htmlFor": "email",
        },
        "ref": null,
        "rendered": Array [
          "username",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "email",
              "name": "email",
              "onChange": [Function],
              "placeholder": "enter password",
              "type": "email",
              "value": "email",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Invalid Input",
          "color": "red",
          "pointing": true,
        },
        "ref": null,
        "rendered": "Invalid Input",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <label
            htmlFor="email"
          >
            username
            <input
              id="email"
              name="email"
              onChange={[Function]}
              placeholder="enter password"
              type="email"
              value="email"
            />
          </label>,
          <Label
            color="red"
            pointing={true}
          >
            Invalid Input
          </Label>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "username",
              <input
                id="email"
                name="email"
                onChange={[Function]}
                placeholder="enter password"
                type="email"
                value="email"
              />,
            ],
            "htmlFor": "email",
          },
          "ref": null,
          "rendered": Array [
            "username",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "email",
                "name": "email",
                "onChange": [Function],
                "placeholder": "enter password",
                "type": "email",
                "value": "email",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Invalid Input",
            "color": "red",
            "pointing": true,
          },
          "ref": null,
          "rendered": "Invalid Input",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
